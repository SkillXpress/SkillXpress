// This file uses AI to generate a draft profile for experts based on their resume and qualifications.

'use server';

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ProfileGeneratorInputSchema = z.object({
  resumeDataUri: z
    .string()
    .describe(
      "The expert's resume as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  qualifications: z.string().describe('A description of the expert qualifications.'),
});
export type ProfileGeneratorInput = z.infer<typeof ProfileGeneratorInputSchema>;

const ProfileGeneratorOutputSchema = z.object({
  profileDraft: z.string().describe('A draft profile generated by the AI.'),
});
export type ProfileGeneratorOutput = z.infer<typeof ProfileGeneratorOutputSchema>;

export async function generateProfile(
  input: ProfileGeneratorInput
): Promise<ProfileGeneratorOutput> {
  return profileGeneratorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'profileGeneratorPrompt',
  input: {schema: ProfileGeneratorInputSchema},
  output: {schema: ProfileGeneratorOutputSchema},
  prompt: `You are an AI assistant designed to generate a draft profile for experts. Use the provided resume and qualifications to create the profile draft.

Resume: {{media url=resumeDataUri}}
Qualifications: {{{qualifications}}}

Create a professional and engaging profile draft that highlights the expert's skills and experience. Make sure to include their areas of expertise, experience, and certifications. The profile should be written in a way that is appealing to potential customers.

Output the entire profile draft.`,
});

const profileGeneratorFlow = ai.defineFlow(
  {
    name: 'profileGeneratorFlow',
    inputSchema: ProfileGeneratorInputSchema,
    outputSchema: ProfileGeneratorOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
